import os
import kaggle
import zipfile

# D√©finition des variables
DATASET_NAME = "retailrocket/ecommerce-dataset"
DATA_PATH = "data"
ZIP_FILE = os.path.join(DATA_PATH, "ecommerce-dataset.zip")

def setup_kaggle_api():
    """
    V√©rifie si le fichier kaggle.json est bien configur√©.
    """
    kaggle_config_path = os.path.expanduser("~/.kaggle/kaggle.json")
    if not os.path.exists(kaggle_config_path):
        raise FileNotFoundError(
            "‚ùå Le fichier kaggle.json est introuvable !\n"
            "T√©l√©charge-le depuis ton compte Kaggle et place-le dans ~/.kaggle/ ou %USERPROFILE%/.kaggle/"
        )

def download_dataset():
    """
    T√©l√©charge et extrait le dataset depuis Kaggle.
    """
    try:
        # V√©rification de l'API Kaggle
        setup_kaggle_api()
        
        # Cr√©ation du dossier 'data' s'il n'existe pas
        os.makedirs(DATA_PATH, exist_ok=True)

        # V√©rifier si le fichier existe d√©j√†
        if os.path.exists(ZIP_FILE) or any(os.scandir(DATA_PATH)):
            print("‚úÖ Les donn√©es sont d√©j√† pr√©sentes, aucun t√©l√©chargement n√©cessaire.")
            return

        # T√©l√©chargement des fichiers
        print(f"üì• T√©l√©chargement du dataset {DATASET_NAME}...")
        kaggle.api.dataset_download_files(DATASET_NAME, path=DATA_PATH, unzip=False)
        print(f"‚úÖ Dataset t√©l√©charg√© dans '{DATA_PATH}'.")
        
        # V√©rifier si le fichier ZIP existe
        if os.path.exists(ZIP_FILE):
            print("üì¶ Extraction des fichiers...")
            with zipfile.ZipFile(ZIP_FILE, 'r') as zip_ref:
                zip_ref.extractall(DATA_PATH)
            print("‚úÖ Extraction termin√©e.")

            # Supprimer le fichier ZIP apr√®s extraction
            os.remove(ZIP_FILE)

        # Lister les fichiers t√©l√©charg√©s
        print("üìÇ Fichiers disponibles dans 'data/':")
        for file in os.listdir(DATA_PATH):
            print(f"   - {file}")

    except Exception as e:
        print(f"‚ùå Erreur lors du t√©l√©chargement : {e}")

if __name__ == "__main__":
    download_dataset()
